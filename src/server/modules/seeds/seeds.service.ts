import { Injectable } from '@nestjs/common';import { InjectRepository } from '@nestjs/typeorm';import { AuthGroups } from '@server/entities/auth-groups.entity';import { Users } from '@server/entities/users.entity';import { Repository } from 'typeorm';@Injectable()export class SeedsService {  constructor(    @InjectRepository(AuthGroups)    private readonly authGroupsRepository: Repository<AuthGroups>,    @InjectRepository(Users)    private readonly usersRepository: Repository<Users>,  ) {}  async createGroup(): Promise<void> {    const name = 'SuperAdmin';    const description = '슈퍼 관리자';    const level = 0;    const exists = await this.authGroupsRepository.findOne({ name });    if (!exists) {      await this.authGroupsRepository.save(        this.authGroupsRepository.create({          name,          description,          level,        }),      );    }  }  async createAdmin(): Promise<void> {    const email = 'admin@example.com';    const exists = await this.usersRepository.findOne({ email });    if (!exists) {      const authGroup = await this.authGroupsRepository.findOne({        name: 'SuperAdmin',      });      await this.usersRepository.save(        this.usersRepository.create({          email,          password: 'test1234',          accessIP: '127.0.0.1',          authGroup,        }),      );    }  }}